<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  ~ Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v2.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v20.html
  ~
  ~ SPDX-License-Identifier: EPL-2.0
  ~
  ~ Contributors:
  ~     WSO2 LLC - support for WSO2 Micro Integrator Configuration
  -->

<xs:schema
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        elementFormDefault="qualified"
        targetNamespace="http://ws.apache.org/ns/synapse"
        xmlns="http://ws.apache.org/ns/synapse">

    <xs:include schemaLocation="../mediators.xsd"/>

    <xs:element name="cache">
        <xs:annotation>
            <xs:documentation source="description">
                Looks for a previously cached message (which is similar to the current message) and, if found, the
                cached response is used for the current message.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element name="onCacheHit" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            If a cache hit occurs, the sequence or the mediator list to be invoked
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:group ref="mediatorList" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:attribute name="sequence" type="xs:string" use="optional"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="protocol" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="methods" minOccurs="1" maxOccurs="1" type="xs:string"/>
                            <xs:element name="headersToIncludeInHash" minOccurs="1" maxOccurs="1" type="xs:string"/>
                            <xs:element name="headersToExcludeInHash" minOccurs="1" maxOccurs="1" type="xs:string"/>
                            <xs:element name="responseCodes" minOccurs="1" maxOccurs="1" type="xs:string"/>
                            <xs:element name="enableCacheControl" minOccurs="1" maxOccurs="1" type="xs:boolean"/>
                            <xs:element name="includeAgeHeader" minOccurs="1" maxOccurs="1" type="xs:boolean"/>
                            <xs:element name="hashGenerator" minOccurs="1" maxOccurs="1" type="xs:string"/>
                        </xs:all>
                        <xs:attribute name="type" type="xs:string" fixed="HTTP" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="implementation" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The cache implementation type and configurations
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute name="maxSize" type="xs:int" use="optional"/>
                        <xs:attribute name="type" use="optional">
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:enumeration value="memory"/>
                                    <xs:enumeration value="disk"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
            </xs:all>
            <xs:attribute name="id" type="xs:string" use="optional"/>
            <xs:attribute name="timeout" type="xs:int" use="optional"/>
            <xs:attribute name="collector" type="xs:boolean" use="optional"/>
            <xs:attribute name="maxMessageSize" type="xs:int" use="optional"/>
            <xs:attribute name="hashGenerator" type="xs:string" use="optional"/>
            <xs:attribute name="scope" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="per-host"/>
                        <xs:enumeration value="per-mediator"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="description" type="xs:string" use="optional"/>
        </xs:complexType>
    </xs:element>
</xs:schema>
